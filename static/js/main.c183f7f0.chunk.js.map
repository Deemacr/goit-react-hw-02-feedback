{"version":3,"sources":["components/Notification.js","components/Statistics.js","components/FeedbackOptions.js","components/App.js","index.js"],"names":["Notification","this","props","message","Component","Statistics","good","neutral","bad","total","positivePercentage","OptionButton","styled","button","FeedbackOptions","onButtonClick","type","onClick","name","App","state","countTotalFeedback","setState","prevState","countPositiveFeedbackPercentage","Math","trunc","handleButton","target","ReactDOM","render","document","getElementById"],"mappings":"qRAGqBA,E,uKAEnB,OACC,oCACC,2BAAIC,KAAKC,MAAMC,c,GAJuBC,aCCrBC,E,uKACV,IAAD,EACkDJ,KAAKC,MAAvDI,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IAAKC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,mBACnC,OACC,6BACED,EAAQ,EACR,6BACC,2CACA,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,oCAAUC,GACV,iDAAuBC,EAAvB,MAGD,kBAAC,EAAD,CAAcP,QAAQ,2B,GAfaC,a,kMCAxC,IAAMO,E,MAAeC,EAAOC,OAAV,KAQGC,E,uKACV,IACDC,EAAkBd,KAAKC,MAAvBa,cACR,OACC,6BACC,kBAACJ,EAAD,CAAcK,KAAK,SAASC,QAASF,EAAeG,KAAK,QAAzD,QAGA,kBAACP,EAAD,CAAcK,KAAK,SAASC,QAASF,EAAeG,KAAK,WAAzD,WAGA,kBAACP,EAAD,CAAcK,KAAK,SAASC,QAASF,EAAeG,KAAK,OAAzD,Y,GAXyCd,aCRxBe,E,4MACpBC,MAAQ,CACPd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAENa,mBAAqB,WACpB,EAAKC,UAAS,SAACC,GAEd,MAAO,CAAEd,MADKc,EAAUjB,KAAOiB,EAAUhB,QAAUgB,EAAUf,QAG9D,EAAKgB,mC,EAGNA,gCAAkC,WACjC,EAAKF,UAAS,SAACC,GACd,MAAO,CACNb,mBAAoBe,KAAKC,MACvBH,EAAUjB,MACTiB,EAAUjB,KAAOiB,EAAUhB,QAAUgB,EAAUf,KAChD,U,EAMLmB,aAAe,YAAiB,IACvBT,EADsB,EAAbU,OACTV,KACR,EAAKI,UAAS,SAACC,GACd,OAAO,eACLL,EAAOK,EAAUL,GAAQ,MAG5B,EAAKG,sB,uDAGI,IAAD,EACkDpB,KAAKmB,MAAvDd,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IAAKE,EADpB,EACoBA,mBAAoBD,EADxC,EACwCA,MAChD,OACC,oCACC,sDACA,kBAAC,EAAD,CAAiBM,cAAed,KAAK0B,eAErC,kBAAC,EAAD,CACCrB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,S,GAhDQN,a,MCCjCyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c183f7f0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Notification extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<p>{this.props.message}</p>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Notification from \"./Notification\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Statistics extends Component {\r\n\trender() {\r\n\t\tconst { good, neutral, bad, total, positivePercentage } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{total > 0 ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> Statistics</h2>\r\n\t\t\t\t\t\t<p>Good: {good}</p>\r\n\t\t\t\t\t\t<p>Neutral: {neutral}</p>\r\n\t\t\t\t\t\t<p>Bad: {bad}</p>\r\n\t\t\t\t\t\t<p>Total {total}</p>\r\n\t\t\t\t\t\t<p>Positive Feedback: {positivePercentage}%</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Notification message=\"No feedback given\" />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number,\r\n\tpositivePercentage: PropTypes.number,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OptionButton = styled.button`\r\n\tfont-size: 1em;\r\n\tmargin: 1em;\r\n\tpadding: 0.25em 1em;\r\n\tborder: 2px solid blueviolet;\r\n\tborder-radius: 3px;\r\n`;\r\n\r\nexport default class FeedbackOptions extends Component {\r\n\trender() {\r\n\t\tconst { onButtonClick } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<OptionButton type=\"button\" onClick={onButtonClick} name=\"good\">\r\n\t\t\t\t\tGood\r\n\t\t\t\t</OptionButton>\r\n\t\t\t\t<OptionButton type=\"button\" onClick={onButtonClick} name=\"neutral\">\r\n\t\t\t\t\tNeutral\r\n\t\t\t\t</OptionButton>\r\n\t\t\t\t<OptionButton type=\"button\" onClick={onButtonClick} name=\"bad\">\r\n\t\t\t\t\tBad\r\n\t\t\t\t</OptionButton>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n\tonButtonClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Statistics from \"./Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\n\r\nexport default class App extends Component {\r\n\tstate = {\r\n\t\tgood: 0,\r\n\t\tneutral: 0,\r\n\t\tbad: 0,\r\n\t};\r\n\tcountTotalFeedback = () => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\tconst total = prevState.good + prevState.neutral + prevState.bad;\r\n\t\t\treturn { total };\r\n\t\t});\r\n\t\tthis.countPositiveFeedbackPercentage();\r\n\t};\r\n\r\n\tcountPositiveFeedbackPercentage = () => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn {\r\n\t\t\t\tpositivePercentage: Math.trunc(\r\n\t\t\t\t\t(prevState.good /\r\n\t\t\t\t\t\t(prevState.good + prevState.neutral + prevState.bad)) *\r\n\t\t\t\t\t\t100\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\thandleButton = ({ target }) => {\r\n\t\tconst { name } = target;\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn {\r\n\t\t\t\t[name]: prevState[name] + 1,\r\n\t\t\t};\r\n\t\t});\r\n\t\tthis.countTotalFeedback();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { good, neutral, bad, positivePercentage, total } = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h1> Please leave Feedback</h1>\r\n\t\t\t\t<FeedbackOptions onButtonClick={this.handleButton} />\r\n\r\n\t\t\t\t<Statistics\r\n\t\t\t\t\tgood={good}\r\n\t\t\t\t\tneutral={neutral}\r\n\t\t\t\t\tbad={bad}\r\n\t\t\t\t\ttotal={total}\r\n\t\t\t\t\tpositivePercentage={positivePercentage}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}