{"version":3,"sources":["components/Notification.js","components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/App.js","index.js"],"names":["Notification","this","props","message","Component","Statistics","good","neutral","bad","total","positivePercentage","OptionButton","styled","button","FeedbackOptions","onGoodIncrement","onNeutralIncrement","onBadIncrement","type","onClick","Section","state","countTotalFeedback","setState","prevState","countPositiveFeedbackPercentage","Math","trunc","handleGoodIncrement","handleNeutralIncrement","handleBadIncrement","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"6QAEqBA,E,uKAEnB,OACC,oCACC,2BAAIC,KAAKC,MAAMC,c,GAJuBC,aCCrBC,E,uKACV,IAAD,EACkDJ,KAAKC,MAAvDI,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IAAKC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,mBACnC,OACC,6BACED,EAAQ,EACR,6BACC,2CACA,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,oCAAUC,GACV,iDAAuBC,EAAvB,MAGD,kBAAC,EAAD,CAAcP,QAAQ,2B,GAfaC,a,kMCAxC,IAAMO,E,MAAeC,EAAOC,OAAV,KAQGC,E,uKACV,IAAD,EACwDb,KAAKC,MAA7Da,EADA,EACAA,gBAAiBC,EADjB,EACiBA,mBAAoBC,EADrC,EACqCA,eAC7C,OACC,6BACC,kBAACN,EAAD,CAAcO,KAAK,SAASC,QAASJ,GAArC,QAGA,kBAACJ,EAAD,CAAcO,KAAK,SAASC,QAASH,GAArC,WAGA,kBAACL,EAAD,CAAcO,KAAK,SAASC,QAASF,GAArC,Y,GAXyCb,aCPxBgB,E,4MAOpBC,MAAQ,CACPf,KAAM,EAAKJ,MAAMI,KACjBC,QAAS,EAAKL,MAAMK,QACpBC,IAAK,EAAKN,MAAMM,K,EAGjBc,mBAAqB,WACpB,EAAKC,UAAS,SAACC,GAEd,MAAO,CAAEf,MADKe,EAAUlB,KAAOkB,EAAUjB,QAAUiB,EAAUhB,QAG9D,EAAKiB,mC,EAGNA,gCAAkC,WACjC,EAAKF,UAAS,SAACC,GACd,MAAO,CACNd,mBAAoBgB,KAAKC,MACvBH,EAAUlB,MACTkB,EAAUlB,KAAOkB,EAAUjB,QAAUiB,EAAUhB,KAChD,U,EAMLoB,oBAAsB,WACrB,EAAKL,UAAS,SAACC,GACd,MAAO,CACNlB,KAAMkB,EAAUlB,KAAO,MAGzB,EAAKgB,sB,EAGNO,uBAAyB,WACxB,EAAKN,UAAS,SAACC,GACd,MAAO,CACNjB,QAASiB,EAAUjB,QAAU,MAG/B,EAAKe,sB,EAGNQ,mBAAqB,WACpB,EAAKP,UAAS,SAACC,GACd,MAAO,CACNhB,IAAKgB,EAAUhB,IAAM,MAGvB,EAAKc,sB,uDAGI,IAAD,EACkDrB,KAAKoB,MAAvDf,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IAAKC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,mBACnC,OACC,oCACC,sDACA,kBAAC,EAAD,CACCK,gBAAiBd,KAAK2B,oBACtBZ,mBAAoBf,KAAK4B,uBACzBZ,eAAgBhB,KAAK6B,qBAGtB,kBAAC,EAAD,CACCxB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,S,GA5EYN,aAAhBgB,EACbW,aAAe,CACrBzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,ICLcwB,E,4MACpBX,MAAQ,CACPf,KAAM,EACNC,QAAS,EACTC,IAAK,G,uDAGI,IAAD,EACuBP,KAAKoB,MAA5Bf,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IACvB,OACC,oCACC,kBAAC,EAAD,CAASF,KAAMA,EAAMC,QAASA,EAASC,IAAKA,S,GAXfJ,a,MCEjC6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ae65a74f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Notification extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<p>{this.props.message}</p>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Notification from \"./Notification\";\r\n\r\nexport default class Statistics extends Component {\r\n\trender() {\r\n\t\tconst { good, neutral, bad, total, positivePercentage } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{total > 0 ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> Statistics</h2>\r\n\t\t\t\t\t\t<p>Good: {good}</p>\r\n\t\t\t\t\t\t<p>Neutral: {neutral}</p>\r\n\t\t\t\t\t\t<p>Bad: {bad}</p>\r\n\t\t\t\t\t\t<p>Total {total}</p>\r\n\t\t\t\t\t\t<p>Positive Feedback: {positivePercentage}%</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Notification message=\"No feedback given\" />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst OptionButton = styled.button`\r\n\tfont-size: 1em;\r\n\tmargin: 1em;\r\n\tpadding: 0.25em 1em;\r\n\tborder: 2px solid blueviolet;\r\n\tborder-radius: 3px;\r\n`;\r\n\r\nexport default class FeedbackOptions extends Component {\r\n\trender() {\r\n\t\tconst { onGoodIncrement, onNeutralIncrement, onBadIncrement } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<OptionButton type=\"button\" onClick={onGoodIncrement}>\r\n\t\t\t\t\tGood\r\n\t\t\t\t</OptionButton>\r\n\t\t\t\t<OptionButton type=\"button\" onClick={onNeutralIncrement}>\r\n\t\t\t\t\tNeutral\r\n\t\t\t\t</OptionButton>\r\n\t\t\t\t<OptionButton type=\"button\" onClick={onBadIncrement}>\r\n\t\t\t\t\tBad\r\n\t\t\t\t</OptionButton>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions\";\n\nexport default class Section extends Component {\n\tstatic defaultProps = {\n\t\tgood: 2,\n\t\tneutral: 0,\n\t\tbad: 0,\n\t};\n\n\tstate = {\n\t\tgood: this.props.good,\n\t\tneutral: this.props.neutral,\n\t\tbad: this.props.bad,\n\t};\n\n\tcountTotalFeedback = () => {\n\t\tthis.setState((prevState) => {\n\t\t\tconst total = prevState.good + prevState.neutral + prevState.bad;\n\t\t\treturn { total };\n\t\t});\n\t\tthis.countPositiveFeedbackPercentage();\n\t};\n\n\tcountPositiveFeedbackPercentage = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tpositivePercentage: Math.trunc(\n\t\t\t\t\t(prevState.good /\n\t\t\t\t\t\t(prevState.good + prevState.neutral + prevState.bad)) *\n\t\t\t\t\t\t100\n\t\t\t\t),\n\t\t\t};\n\t\t});\n\t};\n\n\thandleGoodIncrement = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tgood: prevState.good + 1,\n\t\t\t};\n\t\t});\n\t\tthis.countTotalFeedback();\n\t};\n\n\thandleNeutralIncrement = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tneutral: prevState.neutral + 1,\n\t\t\t};\n\t\t});\n\t\tthis.countTotalFeedback();\n\t};\n\n\thandleBadIncrement = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tbad: prevState.bad + 1,\n\t\t\t};\n\t\t});\n\t\tthis.countTotalFeedback();\n\t};\n\n\trender() {\n\t\tconst { good, neutral, bad, total, positivePercentage } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1> Please leave Feedback</h1>\n\t\t\t\t<FeedbackOptions\n\t\t\t\t\tonGoodIncrement={this.handleGoodIncrement}\n\t\t\t\t\tonNeutralIncrement={this.handleNeutralIncrement}\n\t\t\t\t\tonBadIncrement={this.handleBadIncrement}\n\t\t\t\t/>\n\n\t\t\t\t<Statistics\n\t\t\t\t\tgood={good}\n\t\t\t\t\tneutral={neutral}\n\t\t\t\t\tbad={bad}\n\t\t\t\t\ttotal={total}\n\t\t\t\t\tpositivePercentage={positivePercentage}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\r\nimport Section from \"./Section\";\r\n\r\nexport default class App extends Component {\r\n\tstate = {\r\n\t\tgood: 0,\r\n\t\tneutral: 0,\r\n\t\tbad: 0,\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { good, neutral, bad } = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Section good={good} neutral={neutral} bad={bad} />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}